n, k = map(int, input().split())
lst = [[0, 0]]
dp = [[0]*(k + 1) for _ in range(n + 1)]

for _ in range(n):
    lst.append(list(map(int, input().split())))


for i in range(1, n + 1): # 현재 넣은 물건의 번호
    for j in range(1, k + 1): # 넣을 수 있는 최대 무게
        weight = lst[i][0] # 물건의 무게
        value = lst[i][1] # 물건의 가치

        if j < weight: # 가방에 넣을 수 없으면
            dp[i][j] = dp[i - 1][j] # 위에 값 그대로 가져오기
        else: # 가방에 넣을 수 있으면
            dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight] + value) # 최대 이윤
print(dp[n][k])

'''
입력
4 7
무게 가치
  6  13 6kg이 되었을 때 물건 1 넣을 수 있음 => 가치 13 
  4  8  4kg이 되었을 때 물건 2 넣을 수 있음 => 가치 13
  3  6  3kg이 되었을 때 물건 3 넣을 수 있음 => 가치 14(8+6이 더 큼)
  5  12
           |  | 0 kg | 1 | 2 | 3 | 4 | 5 | 6 | 7 |
  | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| X            | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 |
| 물건 1 (6kg) | 0 | 0 | 0 | 0 | 0 | 0 | 13 | 13 |
| 물건 2 (4kg) | 0 | 0 | 0 | 0 | 8 | 8 | 13 | 13 |
| 물건 3 (3kg) | 0 | 0 | 0 | 6 | 8 | 8 | 13 | 14 |
| 물건 4 (5kg) | 0 | 0 | 0 | 6 | 8 | 12 | 13 | 14 |
'''